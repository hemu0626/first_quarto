[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "index",
    "section": "",
    "text": "123"
  },
  {
    "objectID": "index.html#quarto",
    "href": "index.html#quarto",
    "title": "index",
    "section": "",
    "text": "123"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "projects",
    "section": "",
    "text": "456"
  },
  {
    "objectID": "projects.html#quarto",
    "href": "projects.html#quarto",
    "title": "projects",
    "section": "",
    "text": "456"
  },
  {
    "objectID": "onelayernn.html",
    "href": "onelayernn.html",
    "title": "try",
    "section": "",
    "text": "有监督学习相关概念\n\n输入(input)：输入给计算机的信息，通常我们用X表示，上例的输入就是一张图片\n目标(target)：人工专家定义的标注，通常用Y表示，上例中每张图片都会有一个标注，注明是猫或是狗，这种标注通常会转换成0-1表示。\n预测(predict)：计算机需要判断预测的结果，上例的预测输出就是预测图片的类别或是预测的概率值。\n模型(model)：计算机从输入到预测的判断逻辑，模型也可以认为是一种函数，函数输入，输出预测。最简单的函数就是一条直线，函数是有参数的，例如直线的斜率。\n损失(loss)：如果人类专家的标注和模型的预测不一致，就认为模型还不够好，需要一种量化方法来计算这种不够好的程度，这种量化计算的结果称为损失，例如直接将标注值减去预测值。\n优化(optimize)：一个良好的模型需要有较小的损失，所以机器学习问题也可以看成是一个最优化的问题，优化的目标是损失，可以调整的是模型的参数。\n\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nX = np.array([0.1, 0.2, 0.3, \n              0.4, 0.5, 0.6, \n              0.7, 0.8, 0.9, 1]).reshape(-1,1)\n\ny = np.array([0.05,0.08,0.1,\n             0.09,0.13,0.14,\n             0.17,0.21,0.28,0.27]).reshape(-1,1)\nplt.scatter(X,y)\n\n&lt;matplotlib.collections.PathCollection at 0x7fe7e2b634c0&gt;"
  }
]